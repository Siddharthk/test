%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (9.eps)
%%CreationDate: (2013-12-07T20:17:36+06:00)
%%BoundingBox: 0 0 212 110
%%HiResBoundingBox: 0 0 212 110
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 212 110
userdict begin
DisplayImage
0 0
212 110
12.000000
212 110
1
1
1
1
000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000007F8000000000000000000000000000000000006000000000000000C0F
FFE800000000000000000000000001FFFFFB000000000000000800004800000000000000000000
00001E000001000000000000001800004800000000000000000000000010000001800000000000
001001004800000000000000000000000020000001000000000000001001004800000000000000
000000000030000001000000000000001001004800000000000000000000000010000001000000
000000001001004800000000000000000000000020000001000000000000001001004800000000
000000000000000020000001000000000000001001004800000000000000000000000020000001
000000000000001001004800000000000000000000000020000001000000000000001001004800
00000000000000000000002000000100000000000000100100C000000000000000000000000020
000001000000000000001001008000000000000000000000000020000001000000000000001001
008000000000000000000000000020000001000000000000001001008800000000000000000000
000020000001000000000000001001008800000000000000000000000020000001000000000000
001001008800000000000000000000000020000001000000000000001002008800000000000000
000000000020000001000000000000001002008800000000000000000000000020000001000000
000000001002008800000000000000000000000020000001000000000000001001FF8800000000
000000000000000020000001000000000000001001808800000000000000000000000020000001
00000000000000100100880000000000000000000000002000000100000000000000101F008800
000000000000000000000020000001000000000078001006008800000000000000000000000020
00003D0001FFFFC186001002008800000000000000000000000027FFFFC1007E00003E02002002
00880000000000000000000000002000000100C00000070400200200880000000000007FFFFFE0
00002000000100803000019C00300200800000000000FF800000180000240000FB01001FFFF0C0
0010020110000000001F0000000006000023FFFF06060000000060001002011000000000300000
0000030000200000020C00000000380010020110000000006003F8000001C00020000002180000
00000C001002011000000000C3FC00000000700060000002200000000006001002011000000003
8000000000001C004000000360000000000300100201000000000E000000000000060040000000
C00000000001001002010000000018000000000000030040000000000000000001801002010000
0000700000000000000100400000000000000000008010020100000000C0000000000000018040
000000000000000000801002008000000180000000000000008040000000000000000000801002
008000000100000000000000004040000000000000000000401002008000000200000000000000
004040000000000000000000400804008000000600000000000000002040000000000000000000
400806008000000400000000000000002040000000000000000000400803F80000000800000000
00000000204000000000000000000020080000400000080000003FC00000001040000000000000
0000002008000080000010000000E0380000001040000000000000000000200800008000001000
000380060000001040000000000000000000200800008000003000000200030000001040000000
000000000000300800008000002000000400010000001040000000000000000000100400008000
002000000C0001000000104000000103FC1FFFFFF8100400010000002000001800008000001071
FFE07F0C03100000081004000100000060001FF00000FF07FFD04E0010C03801C0000008100400
010000003FFFE000000781040010400010806000E0000008100400010000000010000001F80080
001040001181C00033FFFFF810040001000000000000000E00018C00104FFFF27F00001C000000
10040001000000000000001800FF07FFF040000002000008000000100400010000000000000030
0F00000000400000020000080000001002000100000000000001C0000000001040000002000008
00000010020001000000000001FF00000000001040000002000008000000100200010000000000
FE0000000000001040000002000008000000100200010000000007800000000000001040000002
00000800000010020002000000001C000000000000001040000002000008000000200200020000
0000600000000000000010800000020000080000002002000200000000C0000000000000001080
0000020000080000002003000600000003000000000000000010800000020000080000000001FF
FC0000000600000000000000001080000002000008000000100000000000000C00000000000000
001080000002000008000000100000000000001800000000000000001080000002000008000000
100000000000003000000000000000001080000002000008000000200000000000002000000000
0000000010800000020000080000002000000000000040000000001C0000001080000002000010
000000600000000FE000C000000000F30000001080000004000010000000600000037200008000
000007010000001080000004000000000000600001FC80000080000000F8010000001080000004
00000800000320000200000001000000078001000000208000000400000C01CC1E2003FC004000
010000000C000180001FA05FFFFFF400001BFE33F0207C00006FE0010000001800037FFFE03040
000004000010000000204000001000030000002000020000001040000004000010000000208000
00100002000000200002000000104000000400001000000020800000100002000000400003007F
FFA05FFFFFFC00000FFFFFF820C000001000021FFFFCC00001FF80006080000004000008000008
20400000100002E00000800018000000208000000400001000000C204000001000020000008000
300000002080000004000010000004208000001000000000004000600000002080000004000010
000004208000001000040000004001800000002080000004000010000004208000001000040000
00200700000000208000000400001000000420800000100002000000183C000000002080000004
0000100000042080000010000200000007E0000000002080000004000010000006208000001000
020000000000000000002080000004000010000002208000001000020000000000000000002080
000004000010000002208000001000020000000000000000002080000004000010000000208000
001000010000000000000000002080000004000010000000208000001000010000000000000000
002080000004000010000000208000001000018000000000000000002080000004000010000000
20800000100000800000000000000000208000000400001000000020800000100000C000000000
000000002080000004000010000000208000001000004000000000000000002100000004000010
000000208000001000006000000000000000002100000004000010000000208000001000003000
000000000000002100000004000010000000208000001000001800000000030000002100000004
000010000000408000001000000C000000000C8000002100000008000010000000408000003000
00060000000038C00000208000000C000037E000004080000020000003010000E06080003FF19F
FF00040000201FC00040C01FFFE0000000C0FFFF01C08000201F00008004000020002200C07FE0
00180000007000000700C7C0000000006E020000100037FF800000000FE000000C00003C007C3F
C0000000438200000FE01000000000000000000000000000000000000000000000000000000000
000000000000
end
%%PageTrailer
%%Trailer
%%EOF
