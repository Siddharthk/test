%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (2.eps)
%%CreationDate: (2013-12-07T20:13:14+06:00)
%%BoundingBox: 0 0 212 110
%%HiResBoundingBox: 0 0 212 110
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 212 110
userdict begin
DisplayImage
0 0
212 110
12.000000
212 110
1
1
1
1
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000007FFFFF000000000000000000000
000000000000000000000000000C00001800000000000000000000000003FFFFFC000000000000
00180000080000000000000000000000000E000006000000000000001000000400000000000000
000000000018000002000000000000001000000400000000000000000000000030000001000000
000000002000000400000000000000000000000020000001000000000000002000000C00000000
000000000000000020000001000000000000002000000800000000000000000000000020000001
000000000000002000000800000000000000000000000010000001000000000000002000000800
000000000000000000000020000001000000000000002000000800000000000000000000000020
000001000000000000002000000400000000000000000000000020000001000000000000002000
000800000000000000000000000020000001000000000000002000000800000000000000000000
000020000001000000000000002000000800000000000000000000000020000001000000000000
002000000800000000000000000000000020000001000000000000002000000800000000000000
000000000020000001000000000000002000000800000000000000000000000020000001000000
000000002000000800000000000000000000000020000001000000000000002000000800000000
000000000000000020000001000000000000002000000800000000000000000000000020000001
000000000000002000000800000000000000000000000020000001000000000000002000000800
000000000000000000000020000001000000000000002000000800000000000000000000000020
000001000000000000002000000800000000000000000000000020000001000000000000002000
000800000000000000000000000020000001000FFFFFC000002000000800000000000000000000
0000200000010038000070000020000008000000000003FFFFF80000002000000101E000001F00
002000000800000000000E00000E0000002000000103000000018000200000080000000000F800
0003F80000200000008600000000C000200000080000000003800000000E000020000000CC0000
0000600020000008000000001E0000000003E00020000000780000000030003000001800000000
70000000000030002000000000000000001C001000001000000007C00000000000180020000000
00000000000600100000100000000C0000000000000C0020000000000000000003001000001000
000018000000000000060060000000000000000001001000003000000030000000000000030040
000000000000000000801000002000000060000000000000018040000000000000000000801000
0020000000C0000000000000008040000000000000000000801000002000000180000000000000
00C040000000000000000000C01800002000000100000000000000004040000000000000000000
400800002000000300000000000000006040000000000000000000400800006000000600000000
000000002040000000000000000000400800004000000400000000000000002040000000000000
000000600800004000000800000000000000002040000000000000000000200800004000000800
00007FF00000003040000000000000000000200C000040000008000001C0180000001040000000
0000000000002004000040000018000003000C0000001040000000000000000000200400004000
001000000600060000001040000000000000000000200400004000001000000C00020000001040
00000007FE000000003004000040000018000030000100000010400000000C0300000000100400
004000000C00E0E00001000000104000000018018000000010040000C0000006039F8000030000
0010400000003000C00000001004000080000003FE000000060000001040000000600060000000
1004000080000000000000000C0000001040000000C00020000000100400008000000000000007
F8000000104000000080003000000030060000800000000000001C000000001080000001800010
00000020020000800000000003FFF0000000001040000001000010000000200200018000000000
0E0000000000001040000002000010000000200200010000000000F80000000000001040000002
000018000000200200010000000003800000000000001040000002000008000000200200010000
0000060000000000000010C000000200000800000020030001000000001C000000000000001080
0000020000080000002001000300000000F0000000000000001080000002000018000000200180
0600000001800000000000000010800000020000100000002000C00C0000000300000000000000
00108000000600001000000020007FF80000000600000000000000001080000004000010000000
200000000000000C00000000000000001080000004000010000000200000000000001000000000
000000001080000004000010000000200000000000002000000000000000001080000004000010
00000020000000000000600000000000000000108000000400001000000020000000000000C000
000000FC0000001080000004000010000000200000000000008000000003860000001080000004
0000100000002000000000000180000000FE020000001080000004000010000000200000000000
010000000380020000001080000004000010000000200000000000030000000600020000001080
000004000010000000201FFFFF8000020000000C00020000001080000004000010000000203000
00C000020000001800020000001080000004000010000000206000006000020000001000020000
001080000004000010000000204000003000020000002000040000001080000004000010000000
20C0000010000200000060000C0000001080000004000010000000208000001000020000004000
180000003080000004000010000000208000001000020000004000300000002080000004000010
000000208000001000020000004000E00000002080000004000010000000208000001000040000
004001800000002080000004000010000000208000001000020000002007000000002080000004
00001000000020800000100002000000300C000000002080000004000010000000208000001000
020000001FF8000000002080000004000010000000208000001000020000000000000000001080
000004000010000000208000001000020000000000000000002080000004000010000000208000
001000030000000000000000002080000004000010000000208000001000010000000000000000
002080000004000010000000208000001000018000000000000000002080000004000010000000
210000002000008000000000000000002080000004000010000000208000001000008000000000
00000000208000000400001000000020800000100000C00000000000000000218000000C000010
000000208000001000004000000000000000002100000008000010000000208000001000006000
000000000000002100000008000010000000208000001000002000000000000000002100000008
000010000000408000001000003000000000000000002100000008000010000000408000001000
001800000000000000002100000004000010000000208000001000000C00000000000000002100
00000800001800000040800000200000060000000000000000218000000800000800000040C000
006000000200000000FFC000006080000008000008000000C04000004000000100000001806000
0040C000001000000800000080600000C000000000000000000000000000000000000000000000
000000000000
end
%%PageTrailer
%%Trailer
%%EOF
