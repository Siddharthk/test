%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (6.eps)
%%CreationDate: (2013-12-07T20:17:25+06:00)
%%BoundingBox: 0 0 186 52
%%HiResBoundingBox: 0 0 186 52
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 186 52
userdict begin
DisplayImage
0 0
186 52
12.000000
186 52
1
1
1
1
00000000000000000000000000000000000000000000000001FFFE000000000000000000000000
000000000000000000010003800000000000000000000000000000000000000000010000F00000
0000000000000000000000000000000000000100001C0000000000000000000000000000000000
000000018000060000000000000000000000001FF0001FFFFE0000008000030000000000000000
00000000101800100003000000801C018001FF007FFC0003FFC00000100C00100001C000004032
00800701804004000200400000180400180000600000402100C00C006040040002004000000C04
000800002000004021804018002040040003004000000404000400003000004020C06030001040
0C0001004000000406000403E01800004010402060001820180001008000000202000406300800
0040206020C0F80820100001008000000402000404180C000040202020818C0420200001008000
00040200040808040000C020203081060420200001008000000C02000408080400008020201102
020420200001008000000802000408040400008060201102020620200001008000000801000408
040400008040201102060360300001008000000801800C0C040400008040201106040180100001
008000001000C00804040200008040201304040000180001008000003000601806040200008040
201204040000080002008000002000201002080200008040202204040080080002008000006000
2010021801000080C0602204040080080002004000004000301002100200008080402204040080
0800020040000040001008036006000080804026040401E0080002004000008000100801C00C00
0080804024040401200800020040000080000810000018000080804024040401E0180002004000
0180001008000030000080804024040400C0100002004000010000100800002000008080402404
040000100002004000030000080C00002000008080402404040000100004004000020000080400
0040000080804024040C00001000040040000200000C0400004000008080402404080000080004
004000020000040C000040000180804044040803C0100004004000020000040800004000010040
4044040802401000040080000600000418000040000100804044040806401000040040000C07E0
041000006000010080404C04080CC01000CC004000080C30041000002000010080804404080880
1003380060F8100810061000003000010080804404080880180E00003384301010021000801800
0100818084041000800FF800001E04601010021000C00C000100810084063000000000F0000006
C01810011003400400030083018203E00E00000090000001000810013002400200020086010200
00390000008800000000081001E0026003000200FC030300006180000080000000000810000006
20010002000006018001C10000000000000000181000000C3003000600000400C0030080000080
0FFFFFFFF01FFF3FF81FFE000400000C00600E00C00003F838000000000000C0000000000C0000
18003878007FFFFE0FE0000000000000000000000008000030000EC00000000000000000000000
000000000000080000E00003000000000000000000000000000000000000100001800000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
end
%%PageTrailer
%%Trailer
%%EOF
