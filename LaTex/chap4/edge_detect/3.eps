%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (3.eps)
%%CreationDate: (2013-12-07T20:17:12+06:00)
%%BoundingBox: 0 0 310 72
%%HiResBoundingBox: 0 0 310 72
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 310 72
userdict begin
DisplayImage
0 0
310 72
12.000000
310 72
1
1
1
1
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000007FFFE00000000C0000000007FFFFFFFFFFFFFFFE0000000003FFFFFFFFFFFFFFE0
00000000003CC000380000003F3E0000000C0000000000000003800000007E0000000000000038
03FFFFFFFFE300000E000000E1C3800000180000000000000000F0000000C00000000000000008
0600000000000000030000018000C000003000000000000000000C000001800000000000000000
040000000000000001000001000040000020000000000000000006000001000000000000000000
040000000000000000800001000040000020000000000000000002000003000000000000000000
040000000000000001000001000040000020000000000000000003000002000000000000000000
080000000000000001000001000040000040000000000000000001800002000000000000000000
040000000000000001000001000040000020000000000000000000800002000000000000000000
040000000000000001000001000040000020000000000000000000C00002000000000000000000
040000000000000001000001000040000020000000000000000000400002000000000000000000
040000000000000001000001000040000020000000000000000000400002000000000000000000
040000000000000002000003000040000020000000000000000000600002000000000000000000
040000000000000006000002000020000020000000000000000000200002000000000000000000
04000003F007FFFFFC000002000040000020000000000000000000200002000000FF80FF03FFF8
0400000E0F1C000000000002000040000020000000000000000000100002000003807381DC0000
040000F801F00000000000020000400000200000FFFFFFFFF8000020000200001E000E00600000
0400018000000000000000020000400000200001800000000C0000200002000030000000000000
040001000000000000000003000040000020000300000000060000100002000020000000000000
040002000000000000000001000040000020000600000000020000100002000020000000000000
040002000000000000000001000040000020000400000000020000100002000020000000000000
040002000000000000000001000040000020000400000000010000100001000020000000000000
040002000000000000000001000040000020000400000000010000100001000020000000000000
040002000000000000000001000040000020000400000000010000100001000030000000000000
04000200000000000000000100006000002000040000000001000010000100001E000000000000
040002000000000000000001000020000020000400000000010000200001000003800000000000
040001000000000000000001000020000020000400000000030000200001000000FFFFFFFFFF80
0400018000000000000000020000200000200004000000000200001000020000000000000000C0
040000C00000007E00000001000020000020000400000000020000200001000000000000000040
04000070000001C380000001000020000020000400000000060000200001000000000000000020
0400001FFFFFFF00F80000010000200000200002000000000C0000600001000000000000000020
04000000000000000C000001000020000020000300000000180000C00001000000000000000020
0400000000000000040000010000600000200001FFFFFFFFF00000800001000000000000000020
040000000000000004000001000040000020000000000000000001800001000000000000000020
040000000000000004000001000040000020000000000000000003000001000000000000000040
0400000000000000040000010000400000200000000000000000060000010000000000000000C0
040000000000000004000001000040000020000000000000000004000001000000000000000180
04000000000000000400000100004000002000000000000000000C000001000000000000000700
0400000000000000040000010000600000300000000000000000080000010000007FFFFFFFFC00
040000000000000004000001000020000010000000000000000010000001000001C00000000000
04000000000000000C00000100002000001000000000000000000800000100001F000000000000
04000000000000001800000100002000001000000000000000000C000002000030000000000000
0400001FFFFFFFFFF0000001000020000010000000000000000006000001000020000000000000
040000700000000000000001000020000010000000000000000002000001000020000000000000
040000C00000000000000001000020000010000000000000000003000001000060000000000000
040001800000000000000001000020000010000000000000000001800001000040000000000000
040001000000000000000001000020000010000000000000000000800001000040000000000000
040001000000000000000001000020000010000000000000000000800001000040000000000000
0400030000000000000000010000200000100000FFFFFFFFE00000C00001000020000000000000
020002000000000000000001000020000020000180000000300000400001000030000000000000
04000200000000000000000100002000001000030000000018000040000100001FF83FFFFFFFF0
0400020000000000000000010000400000100006000000000C00004000010000000EE000000018
040002000000000000000001000020000020000400000000040000400001000000038000000000
040002000000000000000001000020000020000400000000020000400001000000000000000000
040003000000000000000001000020000020000400000000020000400001000000000000000000
040001000000000000000001000020000020000400000000020000400002000000000000000000
060001000000000000000001000020000020000400000000030000600001000000000000000000
020001000000000000000001000020000010000400000000010000200001000000000000000000
020001000000000000000001000020000020000400000000010000200001000000000000000000
020002000000000000000001000020000020000400000000010000200001000000000000000000
020001000000000000000001800020000020000400000000010000200001000000000000000000
020001000000000000000000800020000030000400000000018000600001000000000000000000
010002000000000000000000C0004000001800080000000000C000C00001000000000000000008
0180020000000000000000006000C000000C001800000000007003800001800000000000000038
0083E40000000000000000003F0180000007E0F000000000001FFE000000F7FFFFFFFFFFFFFFE0
00C244000000000000000000018300000000318000000000000000000000100000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
end
%%PageTrailer
%%Trailer
%%EOF
